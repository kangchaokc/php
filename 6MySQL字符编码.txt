MySQL支持的字符集:

			1):查看所有可用的字符集
					show character set;
						或者查看这个数据库里面的一张表information_schema.character_sets,也可以显示所有的字符集和该字符集默认的校对规则
			3):查看字符集的校对规则:
					show collation like "字符集前缀%";	//"gbk%"	
						
			2):mysql的字符集包括字符集(character)和校对规则(collation)俩个概念
						1):字符集用来定义mysql存储字符串的方式
						2):校对规则用来定义	字符串比较的方式
						3):字符集和校对规则是一对多的关系,一个字符集有多个叫对规则选择
						4):校对规则命名约定:
								他们以相关的字符集名开始;通常包括一个语言名,并且以:
										_ci(忽略大小写)
			s							_cs(大小写敏感)
										_bin(二元,既比较是基于字符编码的值二与language无关)
										
MySQL字符集设置跟校对设置:
				4个级别的默认设置:
						服务器级		数据库级		表级		字段级
						
							服务器级:
									1):在配置文件中设置
												[mysqld]
												character-set-server=utf8
									2):或者在启动项中指定
												mysqld --character-set-server=utf8
									3):或者在编译的时候指定
							
							数据库级:
									数据库字符集和叫对规则在创建数据库的时候指定
										也可以创建完数据库后通过alter database命令修改
																注意:数据库已有数据存在(例如表的创建)
																	因为修改字符集并不能将已有的数据按照新的字符集进行存放
																	所以不能直接修改数据库的字符集直接修改数据内容
																解决:需要重新导出,然后修改字符编码
										1):指定了字符集和校对规则;则使用指定的
										2):指定了字符集未指定校对规则;则使用指定字符集的默认校对规则
										3):指定了校对规则未指定字符集;则使用指定校对规则关联的字符集										
										4):都没指定;则使用服务器指定的作为数据库的
										create database db_name
										[[default] character set charset_name]
										[[default] collate collation_name]
									例如:
										create database 数据库名 default character set gbk;
										
										alter database db_name
										[[default] character set charset_name]
										[[default] collate collation_name]
									查看当前数据库的字符集和校对规则:
													use 数据库名;
													show variables like "character_set_database";
													show variables like "collation_database";
							

								表级:
									在创建表时候指定;也可以通过alter table 命令修改	
									同样表中有数据,修改字符集对原来的记录没影响,不会按照新的字符集进行存放
										1):指定了字符集和校对规则;则使用指定的
										2):指定了字符集未指定校对规则;则使用指定字符集的默认校对规则
										3):指定了校对规则未指定字符集;则使用指定校对规则关联的字符集										
										4):都没指定;则使用数据库指定的作为表的
											create	table tb1_name (colmn_list)
											default character set charset_name [collate collation_name]
											
											alter table tb1_name
											[default character set charset_name] [collate collation_name]
											
											alter table tb1_name
											[default character set charset_name] [collate collation_name]

MySQL连接字符集设置:
				客户端	和	服务端	之间交互的字符集
					客户端与服务端交互操作mysql提供3个不同步骤的参数:
										1):character_set_client		客户端来源的数据使用的字符集
										2):character_set_connection	连接层字符集
										3):character_set_results	返回结果字符集
						转换步骤：
							1)	MySQL server收到请求时,将请求数据从character_set_client转化为character_set_connection
							2)	进行内部操作前,将请求数据从character_set_connection转化成内部操作集:
																1)	使用每个已经设置好了的字符集
																2)	不存在;则使用对应数据表的字符集
																3)	不存在;则使用对应数据库的字符集																
																4)	不存在;则使用对应服务器的字符集
							3)	将结果从内部操作字符集转化成character_set_results
									比如
										总结
									客户端是gbk字符集	连接层是gbk	发送请求的时候以utf8发送     会乱码	就是发送的字符集一定对应客户端字符集
										
									客户端是gbk字符集	连接层是gbk	你想要连接层返回utf8给自己	会乱码	接收的字符集一定对应客户端字符集才能解析
								注意一定:
										字符集转换的问题:gbk可以转utf8	但是utf8某些字符转不了gbk	例如utf8里面的法语字符	gbk是中国的字符集
					

					查看当前设置:
							show variables	like "character_set%"
						
					修改:	set names 字符集;			可以同时修改3个参数的值
							也可以在配置文件中设置:
											[mysqol]
											default-character-set=字符集
					修改cmd命令行字符集:
							chcp	65001	换成utf8	(设置为utf-8之后最好手动修改显示字体)
							chap	936		换成默认的gbk
							