+++++++++++++++++++++++++++++php学习第一天++++++++++++++++++++++++++++++++++++

一初识php脚本语言:
	1:	<?php
			//这是php语言标记
			//表示php代码在这里面执行
			//可以嵌入HTML文件中任意地方
			//可以嵌入多个php标记
			//在这标记外的代码不会被解析器解析
			//指令分隔符';'	php语句分为2种	
				// 一种是在程序中使用结构定义语句	
				// 二种是在程序中使用功能执行语句		必须使用分号结尾
			//文件末尾结束标记可以省略  但最后语句必须有';'
			//结束标记就隐含一个';' 但是省略结束标记必须打';' 最好不要这么使用 	该打';'最好打上';'以便代码的维护	
										
		?>
	2:	在开始标记前面或者在结束标记后面输入内容也会在浏览器body里面显示 
	
	3:	php注释:
			第一种:
				//单行注释
			第二种:
				#单行注释
			第三种:			
				/*
				 多行注释
				 多行注释
				*/
			一般自动会帮你在前打个*
				/*				 
				 *多行注释
				 *多行注释
				*/
+++++++++++++++++++++++++++++++++++++++输出语句的种类++++++++++++++++++++++++++++++++

PHP_EOL换行符


echo 123,"<br>中文";
		//echo是一个语法结构，带输出功能，只能输出简单数据(可以多个输出)
		//echo true;在网页中显示1,		echo false;在网页中不显示
@print(["a","b"]);
		带输出功能，只能输出简单数据
print_r(true);
		//能输出一些复杂的数据  他是函数
var_dump(["asd",123,true]);
		//更详细的输出数据
printf("%d","3.2") ;
		//即格式化，又输出
sprintf("%d","3.2") ;
		//只格式化，返回格式化后的字符串，不输出。
		
		%% - 返回一个百分号 %
		%b - 二进制数
%c - ASCII 值对应的字符
%d - 包含正负号的十进制数（负数、0、正数）
%e - 使用小写的科学计数法（例如 1.2e+2）
%E - 使用大写的科学计数法（例如 1.2E+2）
%u - 不包含正负号的十进制数（大于等于 0）
%f - 浮点数（本地设置）
%F - 浮点数（非本地设置）
%g - 较短的 %e 和 %f
%G - 较短的 %E 和 %f
%o - 八进制数
%s - 字符串
%x - 十六进制数（小写字母）
%X - 十六进制数（大写字母）
注意： echo 不是函数，是语言结构；

		
+++++++++++++++++++++++++++变量,常量++++++++++++++++++++++++++++++++++++++++++++++=
	变量:
		变量是用来临时储存值(数据)的容器;	
		格式:
			$变量名=常量(数据);
			//在js中变量声明不初始化会输出undfined
			var i;
			//而在php中变量不初始化会提示注意		
			$i;必须要初始化
		注意:
		1)	php变量的特性是不需要声明变量类型,也就是说这个容器的类型	例如$i='dgdfse';	那这个变量就是字符串类型
		2)	变量名尽量不要使用关键字(虽然php是可以使用关键作为变量名)
		3)	变量名严格区分大小写
		4)	变量名不能数字开头
		5)	变量名只能包含(a到z  0到9  下划线)
		
		A)变量赋值的方式:----------------------------------------------------
		 $this 是一个特殊的变量，它不能被赋值
		 		1):传值(直接赋值)赋值:
		 				$a=值;
		 				$b=值;
				2):变量间赋值:
					格式:$a=值;
						$b=$a;
						改变$b的值不会改变$a的值,开辟了2个不同的内存空间
				3):引用赋值	
					格式:$a=值;
						$b=&$a;
						改变$b也会改变$a的值,相当于$b指向了$a的空间
				4):可变变量:
						1)格式:$a=值;
							$$a=值2;
						注意:$a的值最好不要数值;要遵循变量命名规则					
							$a="dd";
							$$a="hello world"
							相当于把$a的值作为值2的变量名(别名)
						2)格式:
							$hello='world';
							$world='test';
							$test='cc';
							$cc='google';
							echo $$$hello;	//"cc"
				
		
		C)变量类型:------------------------------------------------------------------
			变量类型指存在变量里面的数据类型
			
			1):boolean(布尔值)	值有true(真)	false(假)	
			2):integer(整数)
			3):float(浮点)
			4):array(数组)
			5):object(对象)
			6):null(空值)
			7):resource(资源)
			8):string(字符串)
			注意:
				单引号里面不能再放单引号,反之也不行,需要用转义字符"\"转;单引号里面可以放双引号,反之可以
				定界符里面的单双引号不需要转义直接当做字符输出
			三种定义方法:
				1):$str='dsgg';	//只能放字符串,里面出现的变量不会被变量代替,只会把这个变量当做字符来输出
				
					$integer=3;
				2):$str="ddf{$integer}dsf";	//里面可以放变量     
					注意: 
						$str="dfsdds$integer";这样也会输出这个变量
						$str="dsdfdsfds$integer dsdfs";也会输出这个变量  不过这变量与后面字符直接有个空格
				
				
					$variable=4;
				3):$str=<<<dfwe	//里面可以放变量,这种也叫做定界符(heredoc),EOF(end结束  of...的 file文件)
				dsgsgewfewfe{$variable}
dfwe;结束符前面不能有其他数据或者字符
	
		
		B)四种变量作用域:--------------------------------------------------------
				local(局部变量)在 PHP 函数内部声明的变量是局部变量，仅能在函数内部访问
				global(全局变量)在函数里面使用外部的变量要用global关键字声明   global $i;
								也可以用这个变量	也叫超全局变量	$GLOBALS['x'];这变量必须大写	预定义的
				static(静态变量)该变量仍然是函数的局部变量,可以在函数外定义————不如用全局变量?
				parameter(参数):参数是通过调用代码将值传递给函数的局部变量
				<?php
					function myTest($x){
	   							 echo $x;
					}
						myTest(5);
					?>
					参数是通过调用代码将值传递给函数的局部变量。
					参数是在参数列表中声明的，作为函数声明的一部分
						
		全局例如:				
				$x=5;
				$y=10;
				 
				function myTest()
				{
				    $GLOBALS['y']=$GLOBALS['x']+$GLOBALS['y'];
				} 	 
				myTest();
				echo $y;
				
				
		静态例如:
	
				function myTest() 
				{
					static $a=1;//这个语句只会执行一次   
								也就是第一次调用的时候执行    第一次调用就开辟内存专门存储static变量
								不会被销毁一直存在到整个脚本结束	但这函数会销毁	局部每次调用后会被销毁	
					echo  $a;
					++$a;
					echo "<br>";
				}  
				myTest();
				myTest();
				myTest(); 

				
		C变量类型相互转化:-------------------------------------------------------------------
			1):自动类型转化:
					有boolean参与运算,把true转化成1	false转化成0
					有null参与运算,把null转化成整数0
					有integer和float参与运算时,把integer转化成float运算
			2):强制类型转化:
				格式:
					$i=20;
					$b=(想要的类型)$i;
				注意:这不会改变被转化的变量类型	此时$i还是int类型的 
					1):(int)
					2):(bool)
					3):(float)
					4):(string)
					5):(array)
					6):(object)
					
		D):变量的测试函数:-----------------------------------------------------------------
				is_int()
				is_bool()
				is_array()
				......等
		E):变量的销毁函数:------------------------------------------------------------
				unset()
				
				$aaa=[3,5,767,];
				unset($aaa[1]);
				var_dump($aaa);

				$aaa=3;
				unset($aaa);	
			
	3常量:++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		注意:
			常量是默认全局的,即使定义在函数里面也是全局的
			有效的常量名以字符或下划线开头,一般大写,
			【数字不能作为首字母出现】
			
			
		格式:
			定义在define()函数里面 	不能直接echo define("参数名","参数")  要echo 参数名;
			define ( "name" ,"value" ,false)
		
			defined()检查是否定义了常量
			get_defined_constants()查看内置常量
		该函数有三个参数:
			首个参数定义常量的名称
			第二个参数定义常量的值
			可选的第三个参数规定常量名是否对大小写不敏感。默认是 false。
				
			define("NAME","1111",true);
			define("name","33333");
			echo NAME;	会提示已经定义了   因为第true是不区分大小写的,所以下面小写不能定义
			
			define("NAME","1111");
			define("name","33333",true);
			echo NAME;//下面用了true不区分大小写,但是输出大写的时候会优先考虑本来是大写的常量名
			
		魔术常量:------------------------------------------------------------------------
		【】【】是2根下滑线
		输出的时候不区分大小写
			__DIR__			当前文件路径,不包含文件名
			__FILE__		当前文件路径
			__LINE__		当前代码行数
			__FUNCTION__	当前函数名(区分大小写)
			——CLASS__		当前类名(区分大小写)
		注意
			自 PHP 5.4 起 __CLASS__对 trait也起作用,当用在 trait 方法中时__CLASS__是调用 trait方法的类的名字	
			__METHOD__		当前方法名(区分大小写)
			PHP_VERSION	当前PHP服务器版本(区分大小写)
			
			
			
			
常量与变量的区别:
		常量前面没有$符号,变量前面必须有$
		常量通过define()定义,变量通过"="
		常量定义了不能改变也不能取消,变量可以通过赋值来改变可以通过unset()销毁
		常量是默认全局的即使定义在函数里面也是全局的,变量有不同的作用域
		常量类型只能是bool,int,float,string,变量包含了这些类型,还有array.....
		常量名可区分大小写也可以不区分大小写(定义的时候第3个参数是false还是true),变量名是严格区分大小写的
		

